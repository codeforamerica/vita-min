# This file is based on bin/setup and .circleci/config.yml

FROM ruby:3.2.2

# The Docker environment is based on Debian buster, which used to be called stable Debian, but is now called oldstable.
RUN apt-get update --allow-releaseinfo-change

# System prerequisites
RUN apt-get update \
 && apt-get -y install ca-certificates libgnutls30 build-essential libpq-dev ghostscript default-jre poppler-utils curl \
 && curl -sL https://deb.nodesource.com/setup_16.x | bash - \
 && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
 && echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list \
 && apt-get update && apt-get install -y nodejs yarn python3 python3-pip python3-setuptools \
 && rm -rf /var/lib/apt/lists/*

WORKDIR /app
ADD package.json yarn.lock /app/
RUN NODE_ENV=production yarn install --frozen-lockfile
ADD .ruby-version Gemfile Gemfile.lock /app/

RUN gem install bundler:$(cat Gemfile.lock | tail -1 | tr -d " ") --no-document \
&& bundle install --with development test

RUN echo "IRB.conf[:USE_AUTOCOMPLETE] = false" > ./.irbrc

# Install the OpenCV headless library
RUN pip3 install opencv-python-headless --break-system-packages

# https://github.com/jwilder/dockerize
ENV DOCKERIZE_VERSION=v0.7.0
RUN wget -O - https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz | tar xzf - -C /usr/local/bin

ADD . /app

EXPOSE 3000

RUN chmod +x /app/bin/docker-entrypoint
CMD ["bash", "./bin/docker-entrypoint"]
