---
version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.3.0
executors:
  ruby_executor:
    working_directory: /mnt/ramdisk
    docker:
      - image: cimg/ruby:2.7.5-browsers
  rails_executor:
    working_directory: /mnt/ramdisk
    docker:
      - image: cimg/ruby:2.7.5-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: root
      - image: cimg/postgres:13.4-postgis
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle-test_test
          POSTGRES_HOST_AUTH_METHOD: trust
commands:
  install_system_dependencies:
    description: "Install system dependencies"
    steps:
      - run:
          name: install system dependencies
          command: |
            # The CircleCI environment is based on Debian buster, which used to be called stable Debian, but is now called oldstable.
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo apt-get update --allow-releaseinfo-change && \
            sudo apt-get update && \
            sudo apt-get install -y pdftk ghostscript
  install_js_dependencies:
    description: "Install JS dependencies"
    steps:
      - restore_cache:
          key: yarn-{{ checksum "yarn.lock" }}
      - run:
          name: yarn install --frozen-lockfile
          command: yarn install --frozen-lockfile
      - save_cache:
          key: yarn-{{ checksum "yarn.lock" }}
          paths:
            - /mnt/ramdisk/node_modules
            - ~/.npm
  install_ruby_dependencies:
    description: "Install Ruby dependencies"
    steps:
      - restore_cache:
          key: bundle-cachebreaker_2-{{ checksum "Gemfile.lock" }}
      - run:
          name: install bundler & ruby dependencies
          command: |
            gem install bundler:2.3.5 --no-document && \
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          key: bundle-cachebreaker_2-{{ checksum "Gemfile.lock" }}
          paths: [/mnt/ramdisk/vendor/bundle]
  install_chrome:
    description: "Install Chrome and Chromedriver"
    steps:
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          command: |
            google-chrome --version
            chromedriver --version
          name: Check install
  install_efile_schemas:
    description: "Install IRS e-File schemas"
    steps:
      - run: bundle exec rails setup:download_efile_schemas setup:unzip_efile_schemas && find vendor/irs
  setup_test_db:
    description: "Setup test database"
    steps:
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - restore_cache:
          key: schema-{{ checksum "db/schema.rb" }}
      - run: bundle exec rake db:create db:schema:load db:schema:cache:dump
      - save_cache:
          key: schema-{{ checksum "db/schema.rb" }}
          paths: [tmp/test_db_schema.rb]
jobs:
  i18n_normalize:
    executor: ruby_executor
    steps:
      - checkout
      - install_ruby_dependencies
      - run: bundle exec i18n-tasks normalize
      - run: git config --global user.name CircleCI && git config --global user.email circleci@example.com
      - add_ssh_keys:
          fingerprints:
            - "0a:b8:14:ae:05:dd:17:9c:f4:6e:3c:45:81:8f:06:8d"
      - run: git diff --quiet || (git commit -am "Run i18n-tasks normalize" && git push origin translations_config-locales-en-yml--main_es)
  run_js_tests:
    executor: ruby_executor
    steps:
      - checkout
      - install_js_dependencies
      - run: mkdir ~/test-results && mkdir ~/test-results/rspec && mkdir ~/test-results/jest
      - run:
          command: npm test --ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./test-results/jest/
      - store_test_results:
          path: ~/test-results
  run_ruby_tests:
    executor: rails_executor
    parallelism: 4
    steps:
      - checkout
      - install_js_dependencies
      - install_system_dependencies
      - install_ruby_dependencies
      - install_chrome
      - install_efile_schemas
      - setup_test_db
      - run: |
          EAGER_LOAD=1 RAILS_CACHE_CLASSES=1 bundle exec rspec \
              --format RspecJunitFormatter \
              --out ~/test-results/rspec/rspec-first.xml \
              --format progress \
              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings) || true
      - run: |
          EAGER_LOAD=1 RAILS_CACHE_CLASSES=1 bundle exec rspec \
              --format RspecJunitFormatter \
              --out ~/test-results/rspec/rspec-second.xml \
              --format progress \
              --only-failures
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: /tmp/failure_screenshots
  flow_explorer_screenshots:
    executor: rails_executor
    steps:
      - checkout
      - install_js_dependencies
      - install_system_dependencies
      - install_ruby_dependencies
      - install_chrome
      - setup_test_db
      - run: bundle exec rake assets:precompile
      - run: bundle exec rake flow_explorer:capture_screenshots flow_explorer:upload_screenshots
  deploy_to_aptible--demo:
    executor: ruby_executor
    steps:
      - checkout
      - run: echo $APTIBLE_PUBLIC_KEY >> ~/.ssh/known_hosts
      - run: git fetch --depth=1000000
      - run: git push git@beta.aptible.com:vita-min-demo/vita-min-demo.git $CIRCLE_SHA1:master
    parallelism: 1
  deploy_to_aptible--staging:
    executor: ruby_executor
    steps:
      - checkout
      - run: echo $APTIBLE_PUBLIC_KEY >> ~/.ssh/known_hosts
      - run: git fetch --depth=1000000
      - run: git push git@beta.aptible.com:vita-min-staging/vita-min-staging.git $CIRCLE_SHA1:master
    parallelism: 1
  deploy_to_aptible--production:
    executor: ruby_executor
    steps:
      - checkout
      - run: echo $APTIBLE_PUBLIC_KEY >> ~/.ssh/known_hosts
      - run: git fetch --depth=1000000
      - run: git push git@beta.aptible.com:vita-min-prod/vita-min-prod.git $CIRCLE_SHA1:master
    parallelism: 1
workflows:
  version: 2
  ci-and-deploy:
    jobs:
      - i18n_normalize:
          filters:
            branches:
              only: translations_config-locales-en-yml--main_es
      - run_js_tests
      - run_ruby_tests
      - deploy_to_aptible--demo:
          requires: [run_js_tests, run_ruby_tests]
          filters:
            branches:
              only: main
      - deploy_to_aptible--staging:
          requires: [run_js_tests, run_ruby_tests]
          filters:
            branches:
              only: staging
      - flow_explorer_screenshots:
          filters:
            branches:
              only: [circleci-update-flow-explorer-screenshots]
      - deploy_to_aptible--production:
          requires: [run_js_tests, run_ruby_tests]
          filters:
            branches:
              only: release
  daily:
    triggers:
      - schedule:
          cron: "19 0 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - flow_explorer_screenshots
