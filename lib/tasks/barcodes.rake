require 'pdf/core'
require 'prawn'
require 'interleave2of5'
require 'pdf-417'

namespace :barcodes do
  desc "Play with barcodes"

  task generate_nys_style: :environment do |_task|
    # This code is just a proof of concept to validate that we can indeed place a 1D barcode on each page.
    # Please improve it before putting it into production, e.g. consider removing `system` and reimplementing
    # with PdftkWrapper, clean up tempfiles, use the Rails tempdir, use less predictable filenames, and evaluate pdftk
    # `multistamp` to possibly decrease the # of pdftk invocations.

    # This code does not place the *text* above the barcode, but we need to do that before NYS would be happy.
    # We've added text to a PDF before, so it seems like not a big deal.

    (1..4).each do |page_num|
      # for each page in the IT201 PDF, of which there happen to be 4
      # Generate a barcode
      barcode = Barcodes.nys_10digit(page_num)
      pdf = Prawn::Document.new
      barcode.to_pdf(pdf, width: 3.0 / 2 * 0.8, x: 0, y: 0, height: 72 / 4, bottom_margin: 0)
      pdf.render_file("/tmp/pg#{page_num}.pdf")

      # Extract the page
      system("./vendor/pdftk/pdftk", "A=app/lib/pdfs/it201_fill_in_without_1d_barcode.pdf", "cat", "A#{page_num}", "output", "/tmp/A#{page_num}.pdf")

      # Combine with barcode
      system("./vendor/pdftk/pdftk", "/tmp/A#{page_num}.pdf", "stamp", "/tmp/pg#{page_num}.pdf", "output", "/tmp/combined#{page_num}.pdf")
    end

    # combine all those
    system("./vendor/pdftk/pdftk", "A=/tmp/combined1.pdf", "B=/tmp/combined2.pdf", "C=/tmp/combined3.pdf", "D=/tmp/combined4.pdf", "cat", "A1", "B1", "C1", "D1", "output", "/tmp/it201-with-barcodes.pdf")
  end

  task :generate_az_style do
    # For now, just generate a PNG file and make sure it scans.
    fields = Barcodes.az_form140_fields
    joined = fields.map(&:value).join("\n") # scanned barcode generated by their PDF ends in *EOD* and not *EOD*\n
    # 994 and 525 are 300 pixels per inch times the sizes that the state tells us we need to use. rxing-cli makes something
    # a little less wide, and we could either stretch it or not.
    File.write("/tmp/wowza.txt", joined)
    puts "Saved #{joined} bytes to /tmp/wowza.txt"
    system("rxing-cli", "/tmp/test_image.png", "encode", "--error-correction", "4", "--width", "994", "--height", "525", "--data-file", "/tmp/wowza.txt", "pdf417")
    nil
  end
end

module Barcodes
  def self.nys_10digit(page_num)
    form_type = "201"
    tax_year = "22"
    vendor_source_code = "1234"
    s = "#{form_type}#{page_num}#{tax_year}#{vendor_source_code}"
    barcode = Interleave2of5.new(s)
    barcode.encode # this method call is required to compute some important internal state
  end

  def self.az_form140_fields(
    primary_first: "TESTFIRST",
    primary_last: "TESTLAST",
    primary_ssn: "123121234",
    address_line1: "1 TEST ST",
    city: "TESTTOWN",
    state: "AZ",
    zip: "11111"
  )
    fields = [
      BarcodeField.new('1 Header version', 2, 'T1'),
      BarcodeField.new('2 Software Developer Code', 4, "1234"), # same as NYS vendor source code
      BarcodeField.new('3 Specification Version Number', 2, "01"),
      BarcodeField.new('4 Form Type', 6, "140"),
      BarcodeField.new('5 Form Year', 4, "2022"),
      BarcodeField.new('6 Tax Year Ending DateYY', 8, ""), # blank in barcode from AZ's PDF
      BarcodeField.new('7 Primary First Name', 35, primary_first),
      BarcodeField.new('8 Primary Middle Initial', 1),
      BarcodeField.new('9 Primary Last Name', 35, primary_last),
      BarcodeField.new('10 Primary SSN', 9, primary_ssn),
      BarcodeField.new('11 Spouse First Name', 10),
      BarcodeField.new('12 Spouse Middle Initial', 1),
      BarcodeField.new('13 Spouse Last Name', 35),
      BarcodeField.new('14 Spouse SSN', 9),
      BarcodeField.new('15 Address line 1', 35, address_line1),
      BarcodeField.new('16 Address line 2', 35),
      BarcodeField.new('17 City', 21, city),
      BarcodeField.new('18 State', 2, state),
      BarcodeField.new('19 Zip Code', 9, zip),
      BarcodeField.new('20 Daytime Number', 10),
      BarcodeField.new('21 Married/Joint', 1),
      BarcodeField.new('22 Injured Spouse Protection of Joint Overpayment', 1),
      BarcodeField.new('23 Head of Household', 1),
      BarcodeField.new('24 Married filing Separate', 1),
      BarcodeField.new('25 Single', 1, "X"),
      BarcodeField.new('26 Age 65 or over', 1),
      BarcodeField.new('27 Blind', 1),
      BarcodeField.new('28 Dependents: Under age of 17', 2),
      BarcodeField.new('29 Dependents: Age 17 and over', 2),
      BarcodeField.new('30 Parents/ancestors', 1),
      BarcodeField.new('31 6 Month Extension', 1),
      BarcodeField.new('32 Dependent Info Moer Space-Qualifying Dependents', 1),
      BarcodeField.new('33 Dependent 1 First Name', 10),
      BarcodeField.new('34 Dependent 1 Last Name', 10),
      BarcodeField.new('35 Dependent 1 SSN', 9),
      BarcodeField.new('36 Dependent 1 Relationship', 12),
      BarcodeField.new('37 Dependent 1 Months', 2),
      BarcodeField.new('38 Dependent 1 Age included in', 1),
    ]
    (39..72).each do |i|
      fields << BarcodeField.new("#{i} Placeholder field", 1)
    end
    fields << BarcodeField.new("73 Modified Fed Adjusted Gross Income", 10, "0")
    (74..76).each do |i|
      fields << BarcodeField.new("#{i} Placeholder field", 1)
    end
    fields << BarcodeField.new("77 Other additions", 10, "0")
    fields << BarcodeField.new("78 Subtotal", 10, "0")
    (79..96).each do |i|
      fields << BarcodeField.new("#{i} Placeholder field", 1)
    end
    fields << BarcodeField.new("97 Subtotal lines 24-34c", 10, "0")
    fields << BarcodeField.new("98 Other Subtractions", 10, "0")
    (99..110).each do |i|
      fields << BarcodeField.new("#{i} Placeholder field", 1)
    end
    fields << BarcodeField.new("111 AZ taxable income", 10, "0")
    (112..114).each do |i|
      fields << BarcodeField.new("#{i} Placeholder field", 1)
    end
    fields << BarcodeField.new("115 Dependent tax credit", 10, "0")
    (116..117).each do |i|
      fields << BarcodeField.new("#{i} Placeholder field", 1)
    end
    fields << BarcodeField.new("118 Non-Refundable Credits from AZ Credit Forms", 10, "0")
    (119..305).each do |i|
      fields << BarcodeField.new("#{i} Placeholder field", 1)
    end
    fields << BarcodeField.new("306 Total AZ Tax", 10, "0")
    (307..680).each do |i|
      fields << BarcodeField.new("#{i} Placeholder field", 1)
    end
    fields << BarcodeField.new('681 Trailer', 5, '*EOD*')
    fields
  end

  class BarcodeField
    attr_accessor :name, :length, :value

    def initialize(name, length, value = '')
      @name = name
      @length = length
      @value = value
    end
  end
end
