<% content_for :page_title, current_user.name %>
<% content_for :card do %>
  <section class="slab">

    <h1 class="h1 spacing-below-35"><%= t("general.my_profile") %></h1>
    <div class="field-display">
      <span class="form-question"><%= t("general.name") %></span>
      <span class="label-value"><%= current_user.name %></span>
    </div>
    <div class="field-display">
      <span class="form-question"><%= t("general.email") %></span>
      <span class="label-value"><%= current_user.email %></span>
    </div>
    <div class="field-display">
      <span class="form-question"><%= t("general.role") %></span>
      <span class="label-value"><%= user_role_name(current_user) %></span>
    </div>
    <div class="field-display">
      <span class="form-question"><%= t("general.organization") %></span>
      <span class="label-value"><%= user_group(current_user) || t("general.none") %></span>
    </div>
    <div class="field-display">
      <span class="form-question"><%= t(".start_date") %></span>
      <span class="label-value"><%= default_date_format(current_user.start_date) %></span>
    </div>

    <% if current_user.admin? %>
      <div class="field-display">
        <span class="form-question">State-File</span>
        <span class="label-value"><%= current_user.role.state_file? %></span>
      </div>

      <div class="field-display">
        <span class="form-question">Engineer</span>
        <span class="label-value"><%= current_user.role.engineer? %></span>
      </div>
    <% end %>

    <% if Flipper.enabled?(:hub_email_notifications) %>
      <h1 class="spacing-below-10"><%= t(".notifications_title") %></h1>
      <p><%= t(".notifications_subtitle") %></p>


      <%= form_with model: @form,
                    url: hub_update_notification_preferences_path,
                    method: :patch,
                    local: true,
                    builder: VitaMinFormBuilder,
                    html: { class: 'form-card' } do |f| %>
        <div id="notification_checkboxes">
          <%= f.hub_checkbox(:new_client_message_notification, "<strong>Client Messages</strong>", options: { checked_value: "yes", unchecked_value: "no" }) %>
          <p style="margin-left: 30px; margin-top: -35px"><%= t(".new_client_message_notification_description") %></p>

          <%= f.hub_checkbox(:document_upload_notification, "<strong>Client document uploads</strong>", options: { checked_value: "yes", unchecked_value: "no" }) %>
          <p style="margin-left: 30px; margin-top: -35px"><%= t(".document_upload_notification_description") %></p>

          <%= f.hub_checkbox(:client_assignments_notification, "<strong>Client Assignment</strong>", options: { checked_value: "yes", unchecked_value: "no" }) %>
          <p style="margin-left: 30px; margin-top: -35px"><%=t(".client_assignments_notification_description") %></p>
        </div>

        <div id="unsubscribe_checkbox">
          <%= f.hub_checkbox(:unsubscribe_all, "<strong>Unsubscribe</strong>", options: { checked_value: "yes", unchecked_value: "no" }) %>
          <p style="margin-left: 30px; margin-top: -35px"><%=t(".unsubscribe_all_description")%></p>
        </div>
      <% end %>
    <% end %>
  </section>
<% end %>

<% content_for :script do %>
  <script>
      document.addEventListener("DOMContentLoaded", function() {
          // Function to uncheck and disable all notification checkboxes
          function disableNotificationCheckboxes() {
              $('#notification_checkboxes input[type="checkbox"]').each(function() {
                  $(this).prop('checked', false);
                  $(this).prop('disabled', true);
                  // Add disabled class to the parent label
                  $(this).closest('label').addClass('is-disabled');
              });
          }

          // Function to enable all notification checkboxes
          function enableNotificationCheckboxes() {
              $('#notification_checkboxes input[type="checkbox"]').each(function() {
                  $(this).prop('disabled', false);
                  // Remove disabled class from the parent label
                  $(this).closest('label').removeClass('is-disabled');
              });
          }

          // Check initially if unsubscribe_all is checked
          if ($('#unsubscribe_checkbox input[type="checkbox"]').is(':checked')) {
              disableNotificationCheckboxes();
          }

          // Attach change event listener to unsubscribe_all checkbox
          $('#unsubscribe_checkbox input[type="checkbox"]').change(function() {
              if (this.checked) {
                  disableNotificationCheckboxes();
              } else {
                  enableNotificationCheckboxes();
              }
          });

          // Attach change event listeners to notification checkboxes
          $('#notification_checkboxes input[type="checkbox"]').change(function() {
              // If any notification checkbox is checked, uncheck unsubscribe_all
              if ($(this).is(':checked')) {
                  $('#unsubscribe_checkbox input[type="checkbox"]').prop('checked', false);
              }
          });
      });
  </script>
<% end %>