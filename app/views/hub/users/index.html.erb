<%= content_for :back_to, "profile" %>
<% content_for :page_title, t(".title") %>

<% content_for :card do %>
  <div class="slab">
    <h1 class="h1"><%= t(".title") %></h1>
    <div class="grid">
      <div class="grid__item width-one-half" style="display: flex; align-items: baseline; justify-content: flex-start;">
        <span style="padding-right: 5px">
          <%= t("general.search") %>
        </span>
        <%= form_tag hub_users_path, method: "get", class: "hub-searchbar" do %>
          <input type="text" class="hub-searchbar__input" id="search" name="search"/>
          <%= image_submit_tag("magnifying-glass-icon-white.svg", class: "hub-searchbar__button") %>
        <% end %>
      </div>
      <div class="grid__item width-one-half" style="display: flex; align-items: baseline; justify-content: flex-end;">
        <button id="toggle-suspended-btn" class="button">Hide Suspended Users</button>
      </div>
    </div>
    <table class="index-table user-table">
      <caption class="index-table__title">
        <%= page_entries_info @users, model: "entry" %>
        <%= will_paginate(
              @users,
              previous_label: "<i class=\"icon icon-keyboard_arrow_left\"></i><span class=\"hide-on-mobile\"> Previous</span>",
              next_label: "<span class=\"hide-on-mobile\">Next </span><i class=\"icon icon-keyboard_arrow_right\"></i>",
              inner_window: 1,
              outer_window: 1,
              param_name: "page",
            ) %>
      </caption>

      <thead class="index-table__head">
      <tr class="index-table__row">
        <th scope="col" class="index-table__header"><%= t("general.name") %></th>
        <th scope="col" class="index-table__header"><%= t("general.email") %></th>
        <th scope="col" class="index-table__header"><%= t("general.role") %></th>
        <th scope="col" class="index-table__header"><%= t("general.organization") %></th>
        <th scope="col" class="index-table__header"><%= t(".invite_pending") %></th>
      </tr>
      </thead>

      <tbody class="index-table__body">
      <% @users.each do |user| %>
        <tr id="user-<%= user.id %>" class="index-table__row user-row" data-suspended="<%= user.suspended? %>">
          <th scope="row" class="index-table__row-header">
            <% if Flipper.enabled?(:use_pundit)? policy(user).edit? : can?(:edit, user) %>
              <%= link_to user.name, edit_hub_user_path(id: user) %>
            <% else %>
              <%= user.name %>
            <% end %>
          </th>
          <td class="index-table__cell">
            <%= user.email %>
            <% if user.access_locked? %>
              <span class="locked"><%= image_tag("lock-red.svg", alt: t("general.locked")) %></span>
            <% end %>
            <% if user.suspended? %>
              <span class="locked label label--red"><%= t("general.suspended") %></span>
            <% end %>
          </td>
          <td class="index-table__cell"><%= user_role_name(user) %></td>
          <td class="index-table__cell"><%= user_group(user) || t("general.none") %></td>
          <td class="index-table__cell"><%= t("general.affirmative") if user.invitation_sent_at.present? && user.invitation_accepted_at.nil? %></td>
        </tr>
      <% end %>

      </tbody>
    </table>
  </div>
<% end %>

<% content_for :script do %>
  <script>
      document.addEventListener("DOMContentLoaded", function () {
          const button = document.getElementById("toggle-suspended-btn");
          let hidden = localStorage.getItem("hideSuspended") === "true";

          function applyFilter() {
              document.querySelectorAll(".user-row").forEach(row => {
                  if (row.dataset.suspended === "true") {
                      row.style.display = hidden ? "none" : "";
                  }
              });

              button.textContent = hidden ? "Show Suspended Users" : "Hide Suspended Users";
              button.style.backgroundColor = hidden ? "black" : "white";
              button.style.color = hidden ? "white" : "black";
          }

          applyFilter();

          button.addEventListener("click", function () {
              hidden = !hidden;
              localStorage.setItem("hideSuspended", hidden);
              applyFilter();
          });

          const observer = new MutationObserver(mutations => {
              mutations.forEach(mutation => {
                  mutation.addedNodes.forEach(node => {
                      if (node.classList && node.classList.contains("user-row") && node.dataset.suspended === "true") {
                          node.style.display = hidden ? "none" : "";
                      }
                  });
              });
          });

          const userTable = document.querySelector("#users-table tbody");
          if (userTable) {
              observer.observe(userTable, { childList: true });
          }
      });
  </script>
<% end %>
